"""
(실전 문제) 모험가 길드 p, 311

- 한 마을에 ' 모험가가 N명 ' 있습니다.

- 모험가 길드에서는 [ N명의 모험가를 대상 ]으로 '공포도'를 측정했는데, 
  '공포도'가 [ 높은 모험가는 쉽게 공포를 느껴 ] 위험 상황에서 제대로 대처할 능력이 떨어짐.

- 길드장은 '그룹을 안전하게 구성'하고자 [ 공포도가 X인 모험가는 ] 
  반드시 ** ' X명 이상으로 구성한 모험가 그룹에 참여 ' **해야 떠날 수 있도록 규정.

- 최대 [ 몇개의 모험가 그룹 ]을 만들 수 있는지 궁금합니다.

- 'N명의 모험가에 대한 정보'가 주어졌을 때, 
  여행을 떠날 수 있는 [ 그룹 수의 최댓값 ]을 구하는 프로그램을 작성하시오.

- 예를 들어 N=5이고, [ 각 모험가의 ] 공포도가 다음과 같다고 가정합시다.
   ex) 2 3 1 2 2

- [ 그룹 1에 ] 공포도가 1,2,3인 모험가를 한 명씩 넣고, 
  [ 그룹 2에 ] 공포도가 2인 남은 두명을 넣게 되면, < 총 2개의 그룹 >을 만들 수 있습니다.

- 또한 몇 명의 모험가는 [ 마을에 그대로 남아 있어도 되기 때문 ]에, 
  '모든 모험가를 ' 특정한 그룹에 넣을 필요 x
------------------------------------------------------------------------------
[ 입력 조건 ]

- '첫째 줄'에 모험가의 수 N (1 ≤ N ≤ 100,000)이 주어진다.

- '둘째 줄'에 각 모험가의 '공포도 값'을 [ N 이하의 자연수 ]로 주어지며, 각 자연수는 공백으로 구분.


[ 출력 조건 ]

- 여행을 떠날 수 있는 '그룹 수'의 [ 최댓값 ]을 출력합니다.

( 입력 예시 )                        ( 출력 예시 )
5                                         2
2 3 1 2 2

( 아이디어 )
- 오름차순 정렬 이후 [ 공포도가 낮은 모험가부터 ] 하나씩 확인  

- 이러한 방법을 이용하면 공포도가 오름차순으로 정렬되어 있다는 점에서, 
  항상 [ 최소한의 모험가의 수만 포함 ]하여 그룹을 결성하게 됩니다. --> 모든 모험가를 특정 그룹에 넣을 필요 x 
"""

# 책 정답 11-1.py ( p, 506 )
n = int(input())
data = list(map(int, input().split())) # 공포도 값 입력.
data.sort() # 오름차순 정렬.

result = 0 # [ 총 그룹 ]의 수
count = 0 # 현재 그룹에 [ 포함된 ** 모험가의 수 **]

for i in data: # 공포도를 [ 낮은 것부터 하나씩 확인 ]하며
    count += 1 # 현재 그룹에 [ 해당 모험가를 포함 ]시키기
    
    if count >= i: # 현재 그룹에 '포함된 모험가의 수'가 [ ** 현재의 공포도 이상 **]이라면, 그룹 결성
        result += 1 # 총 [ 그룹의 수 증가 ]시키기
        count = 0 # 현재 그룹에 포함된 [ 모험가의 수 초기화 ]

print(result) # 총 그룹의 수 출력
        
