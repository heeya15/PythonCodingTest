cd C:\Users\choon\OneDrive\Desktop\PythonCodingTest\11_그리디 문제
python "볼링공 고르기.py"
p, 512

( 아이디어 )

- 단계가 진행됨에 따라 'B의 경우의 수는 ' 줄어듬 --> 이미 계산했던 경우 (조합)는 제외하기 때문.
  ex) 전체 볼링공 개수에서,   [ A의 무게가 i인 볼링공을 선택할 수 있는 개수 ]를 제외해 준다.   --> 이것이 B가 선택하는 경우의 수.

- 각 무게별로 [ 볼링공이 몇 개가 존재하는지 기록 ]할 수 있다. 

 ex) 각 볼링공의 무게 1 3 2 3 2 이라고 할 시
    무게가 1인 볼링공 = 1개
    무게가 2인 볼링공 = 2개
    무게가 3인 볼링공 = 2개
    1. A가 무게가 1인 공을 선택할 때 경우의 수 -> 1 * 4 ( B가 선택할 수 있는 경우의 수 5-1) = 4 
    2. A가 무게가 2인 공을 선택할 때 경우의 수 -> 2 * 2 ( B가 선택할 수 있는 경우의 수 4-2) = 4
    3. A가 무게가 3인 공을 선택할 때 경우의 수 -> 2 * 0 ( B가 선택할 수 있는 경우의 수 2-2) = 0
    => 8가지

( 문제 풀이흐름 )
볼링공 '5개', 최대무게 '3'
각각의 볼링공의 무게 '1 3 2 3 2' 
---------------------------------------------------------------------------------------------------------------
1. 볼링공, 최대무게, 각각의 볼링공의 무게 입력

(코드 부분)
n, m = map(int, input().split()) # 볼링공의 개수, 볼링공의 [ 최대 무게 ] 입력.
data = list(map(int, input().split())) # 볼링공 무게를 입력.

---------------------------------------------------------------------------------------------------------------
2. 1부터 10까지의 각 무게별로 [ 볼링공이 몇 개가 존재하는지 기록 ]할 수 있다. 

(코드 부분 )
array = [0] * 11

for x in data:
    # 각 무게에 해당하는 [ 볼링공의 개수 ] 카운트
    array[x] += 1

[ array 테이블 상황 ]
0 1 2 3 4 5 6 7 8 9 10
---------------------------   
   1 2 2

---------------------------------------------------------------------------------------------------------------

3. '1부터 m(최대무게) 까지 '의 [ 각 무게에 대하여 처리 ] -- 경우의 수 계산
    전체 개수 - [ 무게가 i인 ] 볼링공의 개수(A가 선택할 수 있는 개수) 제외 --> b의 경우의 수가 됨
    ( 'a의 경우의 수' * 'b의 경우의수' ) 계산한 결과를 result 변수에 누적.
   
( 코드 부분 )

result = 0

# 1부터 m(최대무게) 까지의 [ 각 무게에 대하여 처리 ]
for i in range(1, m + 1):
    n -= array[i] # [ 무게가 i인 ] 볼링공의 개수(A가 선택할 수 있는 개수) 제외
    result += array[i] * n # B가 선택하는 경우의 수와 곱해주기

print(result)