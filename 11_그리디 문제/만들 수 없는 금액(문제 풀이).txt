p, 509
( 아이디어 )

- 제일 작은 수부터 비교하기 위해 양의 정수 리스트(화폐 단위)를 [ 오름차순으로 정렬 ]한다.

- 1부터 차례대로 특정한 금액을 만들 수 있는지 확인. (1부터 target-1 까지의 모든 금액을 만들 수 있다고 가정.)

- 화폐 단위가 작은 순서대로 동전을 확인하며, 
  [ 현재 확인하는 동전을 이용 ]해 target 금액 또한 만들 수 있는지 확인.
  
- 만약 target 금액을 만들 수 있다면, [ target 값을 ] 현재 동전 화폐를 추가적으로 더해서 업데이트 해 준다.

( 풀어 말하자면.)
- 즉, 주어진 코인으로 target 금액을 만들 수 있는지 체크한다. => 먼저 target = 1로 설정

- 정렬한 data에서 [ 꺼낸 x(코인)가 ] [ target보다 크다면 ], 만들 수 없다.
  [ 같으면 ], 그 [ coin하나로 ] 만들 수 있으므로 가능 --> 더해 준다.
  [ 작다면 ], 이미 target보다 [ 작은 x(코인)는 ] 만들수 있다고 확인된 것이므로, 더하면 된다.

- 그렇기 때문에 'target < x 조건'만 확인하면 된다.

( 문제 풀이흐름 )
동전 4개, 각 화폐단위 1,2,3,8로 가정하고 풀이.

(1). 금액 1을 만들 수 있는지 확인하기 위해 '1'로 설정.

(2). target = 1을 만족할 수 있는지 확인. 우리는 화폐 단위가 '1'인 동전이 있어서 만들 수 있다.
     이어서 target 값을 갱신 --> target = 1+ 1(우리 화폐) = 2로 업데이트
(3). target = 2를 만족할 수 있는지 확인. 마찬가지로 화폐 단위 '2'인 동전이 있어서 만들 수 있다.
     이어서 target 값을 갱신 --> target = 2+ 2(우리 화폐) = 4로 업데이트
(4). target = 4를 만족할 수 있는지 확인. 화폐 단위 '3'이 target 보다 작으므로 [ 우리가 가정한 target -1 ] 보다 작으면
      금액을 만들 수 있다. 이어서 target 값 갱신  --> target = 4+ 3(우리 화폐) = 7로 업데이트
(5). target = 7을 만족할 수 있는지 확인. 우리에게는 이보다 큰 '8'인 동전이 있다. 따라서 [ target<x ] 조건에 성립되어
      금액을 만들 수 없다. 따라서 정답은 --> 7 이 된다.

( 코드 부분 )

target = 1 # 금액 1을 만들 수 있는지 확인하기 위해 '1'로 설정.
for x in data:
    # [ 만들 수 없는 금액을 찾았을 때 ] 반복 종료
    if target < x: # 즉, target을 우리에게 주어진 [ 동전 화폐 단위로 ] 만들 수 있는지 확인.
        break
    target += x # 동전을 이용하여 만들 수 있으면 target을 갱신.

# 만들 수 없는 금액 출력
print(target)