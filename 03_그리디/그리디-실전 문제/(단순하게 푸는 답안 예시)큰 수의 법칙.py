"""
문제:
    - 배열의 크기 [ N ], 
    - 숫자가 더해지는 횟수[  M ]
    - 그리고 K가 주어질 때 동빈이의 큰 수의 법칙에 따른 결과를 출력하시오.
    - K는 [ 특정한 인덱스의 수가 연속해서 더해지는 횟수 ] 
< 입력조건 >
- [ 첫째 줄 ]에 N(2<= n <= 1,000), 
               M(1<=M <= 10,000), 
               K(1<= K <= 10,000)의 자연수가 주어지며
               [ 각 자연수는 ] [ 공백으로 구분 ]한다.
- [ 둘째 줄에 ] N개의 자연수가 주어진다. 각 자연수는 공백으로 구분한다
  단, 각각의 자연수는 1이상 10,000 이하의 수로 주어진다.
- 입력으로 주어지는 [ K는 ] 항상 [ M보다 작거나 같다 ].

< 출력 조건 >
- 첫째 줄에 동빈이의 큰 수의 법칙에 따라 더해진 답을 출력한다.

< 입력 예시 >                  < 출력 예시 >
5 8 3                             46
2 4 5 4 6                
  
배열의 크기(N) = 5,  숫자가 더해지는 횟수(M) = 8, 
특정한 인덱스의 수가 연속해서 더해지는 횟수(K) = 3
-----------------------------------------------------------------------------------------
< map 내장 함수 >
파이썬의 내장 함수인 map()는 [ 여러 개의 데이터를 ] 
[ 한 번에 다른 형태로 변환 ]하기 위해서 사용됩니다. 
따라서, 여러 개의 데이터를 담고 있는 list나 tuple을 대상으로 주로 사용하는 함수입니다.
"""

# "배열크기, 숫자가 더해지는 횟수, 특정한 인덱스의 수가 연속해서 더해지는 횟수를 입력"
N, M, K = map(int,input().split())

# N개의 자연수를 공백으로 구분하여 입력.
data = list(map(int,input().split()))

data.sort() # 입력받은 자연수들 [ 오름차순 정렬. ] --> 2 ,4, 4, 5, 6

first = data[N-1] # 가장 큰 수
second = data[N-2] # 두번째로 큰 

result = 0 #
count = M / (K+1)
while True:
    for i in range(K): #가장 큰 수를 K번 더하기 (특정한 인덱스 연속으로 더하기.)
        if M == 0:   # m 이 0이면 반복문 탈출.
            break 
        result += first
        M -= 1       # 더할 때마다 1씩 빼기
        
    if M == 0:       # m 이 0이면 반복문 탈출.
        break
    result += second # 2번째로 큰 수 더하기. 
    M -= 1           # 더할 때마다 1씩 빼기
print(result) # 최종 답안 출력.
