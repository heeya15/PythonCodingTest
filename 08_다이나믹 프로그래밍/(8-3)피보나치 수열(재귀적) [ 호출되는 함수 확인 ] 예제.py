"""
p, 214
- 다이나믹 프로그래밍을 적용했을 때 [ 피보나치 수열 ] 
  [ 알고리즘 시간 복잡도는 O(N) ]이다.
  
  왜냐하면 f(1)을 구한 다음 그 값이 f(2)를 푸는 데 사용,
  f(2)의 값이 f(3)를 푸는데 사용되는 방식으로 이어지기 때문이다.
- [ 한 번 구한 결과 ]는 < 다시 구해지지 않는다. >

- 함수가 종료될 때 [ 어떤 함수를 호출 ]했는지, 
  [ 현재의 피보나치 수를 출력하도록 ] 코드를 만들면 알 수 있다.
  아래 소스가 [ 현재의 피보나치 수를 출력하도록 만든 코드 ]이다.

"""
# 책 정답 p, 214
# 8-3.py 호출되는 함수 확인
  
d = [0] * 100

def fibo(x):
    print('f(' + str(x) + ')', end=' ')
    if x == 1 or x == 2:
        return 1
    if d[x] != 0:
        return d[x]
    d[x] = fibo(x - 1) + fibo(x - 2)
    return d[x]

fibo(6)